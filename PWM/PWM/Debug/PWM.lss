
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  0000088c  00000900  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000088c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000094a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000009e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ab5  00000000  00000000  00000a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008fd  00000000  00000000  000014ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d7  00000000  00000000  00001dea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  000021c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044c  00000000  00000000  00002280  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000201  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000028cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 34       	cpi	r26, 0x4A	; 74
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	9d d0       	rcall	.+314    	; 0x1ee <main>
  b4:	e9 c3       	rjmp	.+2002   	; 0x888 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <putch_USART0>:
//피아노 음계에 해당하는 PWM 주파수
unsigned int DoReMi[] = {523, 587, 659, 698, 783, 880, 987, 1046, 1174, 1318};
	
void putch_USART0(unsigned char data)
{
	while((UCSR0A & 0x20) == 0); // 전송준비가 될때까지 대기
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <putch_USART0>
	UDR0 = data; // 데이터를 UDR0에 쓰면 전송
  bc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  be:	8b b1       	in	r24, 0x0b	; 11
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	8b b9       	out	0x0b, r24	; 11
  c4:	08 95       	ret

000000c6 <puts_USART0>:
}

void puts_USART0(unsigned char *str)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	ec 01       	movw	r28, r24
	while (*str != 0)
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <puts_USART0+0xc>
	{
		putch_USART0(*str);
  ce:	f4 df       	rcall	.-24     	; 0xb8 <putch_USART0>
		str++;
  d0:	21 96       	adiw	r28, 0x01	; 1
	UCSR0A |= 0x20;
}

void puts_USART0(unsigned char *str)
{
	while (*str != 0)
  d2:	88 81       	ld	r24, Y
  d4:	81 11       	cpse	r24, r1
  d6:	fb cf       	rjmp	.-10     	; 0xce <puts_USART0+0x8>
	{
		putch_USART0(*str);
		str++;
	}
}
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	08 95       	ret

000000de <getch>:

unsigned char getch()
{
	unsigned char data;
	while ((UCSR0A & 0x80) == 0);
  de:	5f 9b       	sbis	0x0b, 7	; 11
  e0:	fe cf       	rjmp	.-4      	; 0xde <getch>
	data = UDR0;
  e2:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
  e4:	9b b1       	in	r25, 0x0b	; 11
  e6:	90 68       	ori	r25, 0x80	; 128
  e8:	9b b9       	out	0x0b, r25	; 11
	return data;
}
  ea:	08 95       	ret

000000ec <Show_Input_Value>:

void Show_Input_Value(unsigned char input)
{
  ec:	0f 93       	push	r16
  ee:	1f 93       	push	r17
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
  f8:	2f 97       	sbiw	r28, 0x0f	; 15
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	f8 94       	cli
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0f be       	out	0x3f, r0	; 63
 102:	cd bf       	out	0x3d, r28	; 61
	unsigned char str[15] = "";
 104:	1a 82       	std	Y+2, r1	; 0x02
 106:	19 82       	std	Y+1, r1	; 0x01
 108:	fe 01       	movw	r30, r28
 10a:	33 96       	adiw	r30, 0x03	; 3
 10c:	9d e0       	ldi	r25, 0x0D	; 13
 10e:	df 01       	movw	r26, r30
 110:	1d 92       	st	X+, r1
 112:	9a 95       	dec	r25
 114:	e9 f7       	brne	.-6      	; 0x110 <Show_Input_Value+0x24>
	sprintf((char*)str, "INPUT : %c\n\r", input);
 116:	1f 92       	push	r1
 118:	8f 93       	push	r24
 11a:	84 e1       	ldi	r24, 0x14	; 20
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	9f 93       	push	r25
 120:	8f 93       	push	r24
 122:	8e 01       	movw	r16, r28
 124:	0f 5f       	subi	r16, 0xFF	; 255
 126:	1f 4f       	sbci	r17, 0xFF	; 255
 128:	1f 93       	push	r17
 12a:	0f 93       	push	r16
 12c:	d2 d0       	rcall	.+420    	; 0x2d2 <sprintf>
	puts_USART0((unsigned char*)str);
 12e:	c8 01       	movw	r24, r16
 130:	ca df       	rcall	.-108    	; 0xc6 <puts_USART0>
}
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
 13e:	2f 96       	adiw	r28, 0x0f	; 15
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	f8 94       	cli
 144:	de bf       	out	0x3e, r29	; 62
 146:	0f be       	out	0x3f, r0	; 63
 148:	cd bf       	out	0x3d, r28	; 61
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	1f 91       	pop	r17
 150:	0f 91       	pop	r16
 152:	08 95       	ret

00000154 <Make_Melody>:

void Make_Melody(unsigned char input)
{
	int num = input - '0';
 154:	e8 2f       	mov	r30, r24
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	f0 97       	sbiw	r30, 0x30	; 48
	ICR1 = 7372800 / DoReMi[num];
 15a:	ee 0f       	add	r30, r30
 15c:	ff 1f       	adc	r31, r31
 15e:	e0 50       	subi	r30, 0x00	; 0
 160:	ff 4f       	sbci	r31, 0xFF	; 255
 162:	20 81       	ld	r18, Z
 164:	31 81       	ldd	r19, Z+1	; 0x01
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	70 e8       	ldi	r23, 0x80	; 128
 16e:	80 e7       	ldi	r24, 0x70	; 112
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	62 d0       	rcall	.+196    	; 0x238 <__divmodsi4>
 174:	37 bd       	out	0x27, r19	; 39
 176:	26 bd       	out	0x26, r18	; 38
	OCR1C = ICR1/50;
 178:	26 b5       	in	r18, 0x26	; 38
 17a:	37 b5       	in	r19, 0x27	; 39
 17c:	36 95       	lsr	r19
 17e:	27 95       	ror	r18
 180:	ab e7       	ldi	r26, 0x7B	; 123
 182:	b4 e1       	ldi	r27, 0x14	; 20
 184:	75 d0       	rcall	.+234    	; 0x270 <__umulhisi3>
 186:	96 95       	lsr	r25
 188:	87 95       	ror	r24
 18a:	e8 e7       	ldi	r30, 0x78	; 120
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	91 83       	std	Z+1, r25	; 0x01
 190:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 192:	2f ef       	ldi	r18, 0xFF	; 255
 194:	8f e3       	ldi	r24, 0x3F	; 63
 196:	92 e0       	ldi	r25, 0x02	; 2
 198:	21 50       	subi	r18, 0x01	; 1
 19a:	80 40       	sbci	r24, 0x00	; 0
 19c:	90 40       	sbci	r25, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <Make_Melody+0x44>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <Make_Melody+0x4e>
 1a2:	00 00       	nop
	_delay_ms(100); // 0.5초 지연
	OCR1C = 0;		//이전 OVF에서 High 되었다가, 그 다음 클럭에서 OCR = 0이므로 바로 compare match가 발생해서 Low가 됨
 1a4:	11 82       	std	Z+1, r1	; 0x01
 1a6:	10 82       	st	Z, r1
 1a8:	08 95       	ret

000001aa <Init>:
}

void Init()
{
	DDRE |= (1 << DDE1);	//TXD0 : 1, RXD0 : 0
 1aa:	82 b1       	in	r24, 0x02	; 2
 1ac:	82 60       	ori	r24, 0x02	; 2
 1ae:	82 b9       	out	0x02, r24	; 2
	//UCSR0A = 0x00;
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);		// Receiver Enable, Transmitter Enable
 1b0:	8a b1       	in	r24, 0x0a	; 10
 1b2:	88 61       	ori	r24, 0x18	; 24
 1b4:	8a b9       	out	0x0a, r24	; 10
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);	// Character Size : 8-bit
 1b6:	e5 e9       	ldi	r30, 0x95	; 149
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	86 60       	ori	r24, 0x06	; 6
 1be:	80 83       	st	Z, r24
	//UBRR0H = 0x00;
	UBRR0L = 3;		//f : 7.3728MHz이고, Baud Rate : 115200일 때
 1c0:	83 e0       	ldi	r24, 0x03	; 3
 1c2:	89 b9       	out	0x09, r24	; 9
	
	DDRB |= (1 << DDB7);
 1c4:	87 b3       	in	r24, 0x17	; 23
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	87 bb       	out	0x17, r24	; 23
	TCCR1A |= (1 << WGM11);		// Fast PWM 모드 설정, TOP : ICR1
 1ca:	8f b5       	in	r24, 0x2f	; 47
 1cc:	82 60       	ori	r24, 0x02	; 2
 1ce:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12);		// Fast PWM 모드 설정, TOP : ICR1
 1d0:	8e b5       	in	r24, 0x2e	; 46
 1d2:	88 60       	ori	r24, 0x08	; 8
 1d4:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << WGM13);		// Fast PWM	모드 설정, TOP : ICR1
 1d6:	8e b5       	in	r24, 0x2e	; 46
 1d8:	80 61       	ori	r24, 0x10	; 16
 1da:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= (1 << COM1C1);	// Clear OCnA/OCnB/OCnC on compare match, set OCnA/OCnB/OCnC at BOTTOM, (non-inverting mode)
 1dc:	8f b5       	in	r24, 0x2f	; 47
 1de:	88 60       	ori	r24, 0x08	; 8
 1e0:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << CS10);		// clkI/O/1 (No prescaling)
 1e2:	8e b5       	in	r24, 0x2e	; 46
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	8e bd       	out	0x2e, r24	; 46
	//TCCR1C = 0x00;
	TCNT1 = 0;
 1e8:	1d bc       	out	0x2d, r1	; 45
 1ea:	1c bc       	out	0x2c, r1	; 44
 1ec:	08 95       	ret

000001ee <main>:
}

int main(void)
{
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	cd b7       	in	r28, 0x3d	; 61
 1f4:	de b7       	in	r29, 0x3e	; 62
 1f6:	a9 97       	sbiw	r28, 0x29	; 41
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	f8 94       	cli
 1fc:	de bf       	out	0x3e, r29	; 62
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	cd bf       	out	0x3d, r28	; 61
	Init();
 202:	d3 df       	rcall	.-90     	; 0x1aa <Init>
	
	unsigned char msg[] =
 204:	89 e2       	ldi	r24, 0x29	; 41
 206:	e1 e2       	ldi	r30, 0x21	; 33
 208:	f1 e0       	ldi	r31, 0x01	; 1
 20a:	de 01       	movw	r26, r28
 20c:	11 96       	adiw	r26, 0x01	; 1
 20e:	01 90       	ld	r0, Z+
 210:	0d 92       	st	X+, r0
 212:	8a 95       	dec	r24
 214:	e1 f7       	brne	.-8      	; 0x20e <main+0x20>
	"\r\nPlease enter a number button.(0 ~ 9)\r\n";

	puts_USART0(msg);
 216:	ce 01       	movw	r24, r28
 218:	01 96       	adiw	r24, 0x01	; 1
	
	while(1)
	{
		//출력할 주파수 값을 입력 받음
		unsigned char input = getch();
 21a:	55 df       	rcall	.-342    	; 0xc6 <puts_USART0>
 21c:	60 df       	rcall	.-320    	; 0xde <getch>
		Show_Input_Value(input);
 21e:	18 2f       	mov	r17, r24
 220:	65 df       	rcall	.-310    	; 0xec <Show_Input_Value>
		if((input >= '0') && (input <= '9'))
 222:	80 ed       	ldi	r24, 0xD0	; 208
 224:	81 0f       	add	r24, r17
 226:	8a 30       	cpi	r24, 0x0A	; 10
		{
			Make_Melody(input);
 228:	18 f4       	brcc	.+6      	; 0x230 <main+0x42>
 22a:	81 2f       	mov	r24, r17
 22c:	93 df       	rcall	.-218    	; 0x154 <Make_Melody>
		}
		else
		{
			puts_USART0(msg);
 22e:	f6 cf       	rjmp	.-20     	; 0x21c <main+0x2e>
 230:	ce 01       	movw	r24, r28
 232:	01 96       	adiw	r24, 0x01	; 1
 234:	48 df       	rcall	.-368    	; 0xc6 <puts_USART0>
 236:	f2 cf       	rjmp	.-28     	; 0x21c <main+0x2e>

00000238 <__divmodsi4>:
 238:	05 2e       	mov	r0, r21
 23a:	97 fb       	bst	r25, 7
 23c:	16 f4       	brtc	.+4      	; 0x242 <__divmodsi4+0xa>
 23e:	00 94       	com	r0
 240:	0f d0       	rcall	.+30     	; 0x260 <__negsi2>
 242:	57 fd       	sbrc	r21, 7
 244:	05 d0       	rcall	.+10     	; 0x250 <__divmodsi4_neg2>
 246:	23 d0       	rcall	.+70     	; 0x28e <__udivmodsi4>
 248:	07 fc       	sbrc	r0, 7
 24a:	02 d0       	rcall	.+4      	; 0x250 <__divmodsi4_neg2>
 24c:	46 f4       	brtc	.+16     	; 0x25e <__divmodsi4_exit>
 24e:	08 c0       	rjmp	.+16     	; 0x260 <__negsi2>

00000250 <__divmodsi4_neg2>:
 250:	50 95       	com	r21
 252:	40 95       	com	r20
 254:	30 95       	com	r19
 256:	21 95       	neg	r18
 258:	3f 4f       	sbci	r19, 0xFF	; 255
 25a:	4f 4f       	sbci	r20, 0xFF	; 255
 25c:	5f 4f       	sbci	r21, 0xFF	; 255

0000025e <__divmodsi4_exit>:
 25e:	08 95       	ret

00000260 <__negsi2>:
 260:	90 95       	com	r25
 262:	80 95       	com	r24
 264:	70 95       	com	r23
 266:	61 95       	neg	r22
 268:	7f 4f       	sbci	r23, 0xFF	; 255
 26a:	8f 4f       	sbci	r24, 0xFF	; 255
 26c:	9f 4f       	sbci	r25, 0xFF	; 255
 26e:	08 95       	ret

00000270 <__umulhisi3>:
 270:	a2 9f       	mul	r26, r18
 272:	b0 01       	movw	r22, r0
 274:	b3 9f       	mul	r27, r19
 276:	c0 01       	movw	r24, r0
 278:	a3 9f       	mul	r26, r19
 27a:	70 0d       	add	r23, r0
 27c:	81 1d       	adc	r24, r1
 27e:	11 24       	eor	r1, r1
 280:	91 1d       	adc	r25, r1
 282:	b2 9f       	mul	r27, r18
 284:	70 0d       	add	r23, r0
 286:	81 1d       	adc	r24, r1
 288:	11 24       	eor	r1, r1
 28a:	91 1d       	adc	r25, r1
 28c:	08 95       	ret

0000028e <__udivmodsi4>:
 28e:	a1 e2       	ldi	r26, 0x21	; 33
 290:	1a 2e       	mov	r1, r26
 292:	aa 1b       	sub	r26, r26
 294:	bb 1b       	sub	r27, r27
 296:	fd 01       	movw	r30, r26
 298:	0d c0       	rjmp	.+26     	; 0x2b4 <__udivmodsi4_ep>

0000029a <__udivmodsi4_loop>:
 29a:	aa 1f       	adc	r26, r26
 29c:	bb 1f       	adc	r27, r27
 29e:	ee 1f       	adc	r30, r30
 2a0:	ff 1f       	adc	r31, r31
 2a2:	a2 17       	cp	r26, r18
 2a4:	b3 07       	cpc	r27, r19
 2a6:	e4 07       	cpc	r30, r20
 2a8:	f5 07       	cpc	r31, r21
 2aa:	20 f0       	brcs	.+8      	; 0x2b4 <__udivmodsi4_ep>
 2ac:	a2 1b       	sub	r26, r18
 2ae:	b3 0b       	sbc	r27, r19
 2b0:	e4 0b       	sbc	r30, r20
 2b2:	f5 0b       	sbc	r31, r21

000002b4 <__udivmodsi4_ep>:
 2b4:	66 1f       	adc	r22, r22
 2b6:	77 1f       	adc	r23, r23
 2b8:	88 1f       	adc	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	1a 94       	dec	r1
 2be:	69 f7       	brne	.-38     	; 0x29a <__udivmodsi4_loop>
 2c0:	60 95       	com	r22
 2c2:	70 95       	com	r23
 2c4:	80 95       	com	r24
 2c6:	90 95       	com	r25
 2c8:	9b 01       	movw	r18, r22
 2ca:	ac 01       	movw	r20, r24
 2cc:	bd 01       	movw	r22, r26
 2ce:	cf 01       	movw	r24, r30
 2d0:	08 95       	ret

000002d2 <sprintf>:
 2d2:	0f 93       	push	r16
 2d4:	1f 93       	push	r17
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	cd b7       	in	r28, 0x3d	; 61
 2dc:	de b7       	in	r29, 0x3e	; 62
 2de:	2e 97       	sbiw	r28, 0x0e	; 14
 2e0:	0f b6       	in	r0, 0x3f	; 63
 2e2:	f8 94       	cli
 2e4:	de bf       	out	0x3e, r29	; 62
 2e6:	0f be       	out	0x3f, r0	; 63
 2e8:	cd bf       	out	0x3d, r28	; 61
 2ea:	0d 89       	ldd	r16, Y+21	; 0x15
 2ec:	1e 89       	ldd	r17, Y+22	; 0x16
 2ee:	86 e0       	ldi	r24, 0x06	; 6
 2f0:	8c 83       	std	Y+4, r24	; 0x04
 2f2:	1a 83       	std	Y+2, r17	; 0x02
 2f4:	09 83       	std	Y+1, r16	; 0x01
 2f6:	8f ef       	ldi	r24, 0xFF	; 255
 2f8:	9f e7       	ldi	r25, 0x7F	; 127
 2fa:	9e 83       	std	Y+6, r25	; 0x06
 2fc:	8d 83       	std	Y+5, r24	; 0x05
 2fe:	ae 01       	movw	r20, r28
 300:	47 5e       	subi	r20, 0xE7	; 231
 302:	5f 4f       	sbci	r21, 0xFF	; 255
 304:	6f 89       	ldd	r22, Y+23	; 0x17
 306:	78 8d       	ldd	r23, Y+24	; 0x18
 308:	ce 01       	movw	r24, r28
 30a:	01 96       	adiw	r24, 0x01	; 1
 30c:	10 d0       	rcall	.+32     	; 0x32e <vfprintf>
 30e:	ef 81       	ldd	r30, Y+7	; 0x07
 310:	f8 85       	ldd	r31, Y+8	; 0x08
 312:	e0 0f       	add	r30, r16
 314:	f1 1f       	adc	r31, r17
 316:	10 82       	st	Z, r1
 318:	2e 96       	adiw	r28, 0x0e	; 14
 31a:	0f b6       	in	r0, 0x3f	; 63
 31c:	f8 94       	cli
 31e:	de bf       	out	0x3e, r29	; 62
 320:	0f be       	out	0x3f, r0	; 63
 322:	cd bf       	out	0x3d, r28	; 61
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	1f 91       	pop	r17
 32a:	0f 91       	pop	r16
 32c:	08 95       	ret

0000032e <vfprintf>:
 32e:	2f 92       	push	r2
 330:	3f 92       	push	r3
 332:	4f 92       	push	r4
 334:	5f 92       	push	r5
 336:	6f 92       	push	r6
 338:	7f 92       	push	r7
 33a:	8f 92       	push	r8
 33c:	9f 92       	push	r9
 33e:	af 92       	push	r10
 340:	bf 92       	push	r11
 342:	cf 92       	push	r12
 344:	df 92       	push	r13
 346:	ef 92       	push	r14
 348:	ff 92       	push	r15
 34a:	0f 93       	push	r16
 34c:	1f 93       	push	r17
 34e:	cf 93       	push	r28
 350:	df 93       	push	r29
 352:	cd b7       	in	r28, 0x3d	; 61
 354:	de b7       	in	r29, 0x3e	; 62
 356:	2b 97       	sbiw	r28, 0x0b	; 11
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	6c 01       	movw	r12, r24
 364:	7b 01       	movw	r14, r22
 366:	8a 01       	movw	r16, r20
 368:	fc 01       	movw	r30, r24
 36a:	17 82       	std	Z+7, r1	; 0x07
 36c:	16 82       	std	Z+6, r1	; 0x06
 36e:	83 81       	ldd	r24, Z+3	; 0x03
 370:	81 ff       	sbrs	r24, 1
 372:	bf c1       	rjmp	.+894    	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 374:	ce 01       	movw	r24, r28
 376:	01 96       	adiw	r24, 0x01	; 1
 378:	3c 01       	movw	r6, r24
 37a:	f6 01       	movw	r30, r12
 37c:	93 81       	ldd	r25, Z+3	; 0x03
 37e:	f7 01       	movw	r30, r14
 380:	93 fd       	sbrc	r25, 3
 382:	85 91       	lpm	r24, Z+
 384:	93 ff       	sbrs	r25, 3
 386:	81 91       	ld	r24, Z+
 388:	7f 01       	movw	r14, r30
 38a:	88 23       	and	r24, r24
 38c:	09 f4       	brne	.+2      	; 0x390 <vfprintf+0x62>
 38e:	ad c1       	rjmp	.+858    	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 390:	85 32       	cpi	r24, 0x25	; 37
 392:	39 f4       	brne	.+14     	; 0x3a2 <vfprintf+0x74>
 394:	93 fd       	sbrc	r25, 3
 396:	85 91       	lpm	r24, Z+
 398:	93 ff       	sbrs	r25, 3
 39a:	81 91       	ld	r24, Z+
 39c:	7f 01       	movw	r14, r30
 39e:	85 32       	cpi	r24, 0x25	; 37
 3a0:	21 f4       	brne	.+8      	; 0x3aa <vfprintf+0x7c>
 3a2:	b6 01       	movw	r22, r12
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	d6 d1       	rcall	.+940    	; 0x754 <fputc>
 3a8:	e8 cf       	rjmp	.-48     	; 0x37a <vfprintf+0x4c>
 3aa:	91 2c       	mov	r9, r1
 3ac:	21 2c       	mov	r2, r1
 3ae:	31 2c       	mov	r3, r1
 3b0:	ff e1       	ldi	r31, 0x1F	; 31
 3b2:	f3 15       	cp	r31, r3
 3b4:	d8 f0       	brcs	.+54     	; 0x3ec <vfprintf+0xbe>
 3b6:	8b 32       	cpi	r24, 0x2B	; 43
 3b8:	79 f0       	breq	.+30     	; 0x3d8 <vfprintf+0xaa>
 3ba:	38 f4       	brcc	.+14     	; 0x3ca <vfprintf+0x9c>
 3bc:	80 32       	cpi	r24, 0x20	; 32
 3be:	79 f0       	breq	.+30     	; 0x3de <vfprintf+0xb0>
 3c0:	83 32       	cpi	r24, 0x23	; 35
 3c2:	a1 f4       	brne	.+40     	; 0x3ec <vfprintf+0xbe>
 3c4:	23 2d       	mov	r18, r3
 3c6:	20 61       	ori	r18, 0x10	; 16
 3c8:	1d c0       	rjmp	.+58     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ca:	8d 32       	cpi	r24, 0x2D	; 45
 3cc:	61 f0       	breq	.+24     	; 0x3e6 <vfprintf+0xb8>
 3ce:	80 33       	cpi	r24, 0x30	; 48
 3d0:	69 f4       	brne	.+26     	; 0x3ec <vfprintf+0xbe>
 3d2:	23 2d       	mov	r18, r3
 3d4:	21 60       	ori	r18, 0x01	; 1
 3d6:	16 c0       	rjmp	.+44     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3d8:	83 2d       	mov	r24, r3
 3da:	82 60       	ori	r24, 0x02	; 2
 3dc:	38 2e       	mov	r3, r24
 3de:	e3 2d       	mov	r30, r3
 3e0:	e4 60       	ori	r30, 0x04	; 4
 3e2:	3e 2e       	mov	r3, r30
 3e4:	2a c0       	rjmp	.+84     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3e6:	f3 2d       	mov	r31, r3
 3e8:	f8 60       	ori	r31, 0x08	; 8
 3ea:	1d c0       	rjmp	.+58     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3ec:	37 fc       	sbrc	r3, 7
 3ee:	2d c0       	rjmp	.+90     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3f0:	20 ed       	ldi	r18, 0xD0	; 208
 3f2:	28 0f       	add	r18, r24
 3f4:	2a 30       	cpi	r18, 0x0A	; 10
 3f6:	40 f0       	brcs	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f8:	8e 32       	cpi	r24, 0x2E	; 46
 3fa:	b9 f4       	brne	.+46     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3fc:	36 fc       	sbrc	r3, 6
 3fe:	75 c1       	rjmp	.+746    	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 400:	23 2d       	mov	r18, r3
 402:	20 64       	ori	r18, 0x40	; 64
 404:	32 2e       	mov	r3, r18
 406:	19 c0       	rjmp	.+50     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 408:	36 fe       	sbrs	r3, 6
 40a:	06 c0       	rjmp	.+12     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40c:	8a e0       	ldi	r24, 0x0A	; 10
 40e:	98 9e       	mul	r9, r24
 410:	20 0d       	add	r18, r0
 412:	11 24       	eor	r1, r1
 414:	92 2e       	mov	r9, r18
 416:	11 c0       	rjmp	.+34     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 418:	ea e0       	ldi	r30, 0x0A	; 10
 41a:	2e 9e       	mul	r2, r30
 41c:	20 0d       	add	r18, r0
 41e:	11 24       	eor	r1, r1
 420:	22 2e       	mov	r2, r18
 422:	f3 2d       	mov	r31, r3
 424:	f0 62       	ori	r31, 0x20	; 32
 426:	3f 2e       	mov	r3, r31
 428:	08 c0       	rjmp	.+16     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42a:	8c 36       	cpi	r24, 0x6C	; 108
 42c:	21 f4       	brne	.+8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42e:	83 2d       	mov	r24, r3
 430:	80 68       	ori	r24, 0x80	; 128
 432:	38 2e       	mov	r3, r24
 434:	02 c0       	rjmp	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	88 36       	cpi	r24, 0x68	; 104
 438:	41 f4       	brne	.+16     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43a:	f7 01       	movw	r30, r14
 43c:	93 fd       	sbrc	r25, 3
 43e:	85 91       	lpm	r24, Z+
 440:	93 ff       	sbrs	r25, 3
 442:	81 91       	ld	r24, Z+
 444:	7f 01       	movw	r14, r30
 446:	81 11       	cpse	r24, r1
 448:	b3 cf       	rjmp	.-154    	; 0x3b0 <vfprintf+0x82>
 44a:	98 2f       	mov	r25, r24
 44c:	9f 7d       	andi	r25, 0xDF	; 223
 44e:	95 54       	subi	r25, 0x45	; 69
 450:	93 30       	cpi	r25, 0x03	; 3
 452:	28 f4       	brcc	.+10     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 454:	0c 5f       	subi	r16, 0xFC	; 252
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	9f e3       	ldi	r25, 0x3F	; 63
 45a:	99 83       	std	Y+1, r25	; 0x01
 45c:	0d c0       	rjmp	.+26     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 45e:	83 36       	cpi	r24, 0x63	; 99
 460:	31 f0       	breq	.+12     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 462:	83 37       	cpi	r24, 0x73	; 115
 464:	71 f0       	breq	.+28     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 466:	83 35       	cpi	r24, 0x53	; 83
 468:	09 f0       	breq	.+2      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 46a:	55 c0       	rjmp	.+170    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 46c:	20 c0       	rjmp	.+64     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 46e:	f8 01       	movw	r30, r16
 470:	80 81       	ld	r24, Z
 472:	89 83       	std	Y+1, r24	; 0x01
 474:	0e 5f       	subi	r16, 0xFE	; 254
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	88 24       	eor	r8, r8
 47a:	83 94       	inc	r8
 47c:	91 2c       	mov	r9, r1
 47e:	53 01       	movw	r10, r6
 480:	12 c0       	rjmp	.+36     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 482:	28 01       	movw	r4, r16
 484:	f2 e0       	ldi	r31, 0x02	; 2
 486:	4f 0e       	add	r4, r31
 488:	51 1c       	adc	r5, r1
 48a:	f8 01       	movw	r30, r16
 48c:	a0 80       	ld	r10, Z
 48e:	b1 80       	ldd	r11, Z+1	; 0x01
 490:	36 fe       	sbrs	r3, 6
 492:	03 c0       	rjmp	.+6      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 494:	69 2d       	mov	r22, r9
 496:	70 e0       	ldi	r23, 0x00	; 0
 498:	02 c0       	rjmp	.+4      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 49a:	6f ef       	ldi	r22, 0xFF	; 255
 49c:	7f ef       	ldi	r23, 0xFF	; 255
 49e:	c5 01       	movw	r24, r10
 4a0:	4e d1       	rcall	.+668    	; 0x73e <strnlen>
 4a2:	4c 01       	movw	r8, r24
 4a4:	82 01       	movw	r16, r4
 4a6:	f3 2d       	mov	r31, r3
 4a8:	ff 77       	andi	r31, 0x7F	; 127
 4aa:	3f 2e       	mov	r3, r31
 4ac:	15 c0       	rjmp	.+42     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4ae:	28 01       	movw	r4, r16
 4b0:	22 e0       	ldi	r18, 0x02	; 2
 4b2:	42 0e       	add	r4, r18
 4b4:	51 1c       	adc	r5, r1
 4b6:	f8 01       	movw	r30, r16
 4b8:	a0 80       	ld	r10, Z
 4ba:	b1 80       	ldd	r11, Z+1	; 0x01
 4bc:	36 fe       	sbrs	r3, 6
 4be:	03 c0       	rjmp	.+6      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c0:	69 2d       	mov	r22, r9
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c6:	6f ef       	ldi	r22, 0xFF	; 255
 4c8:	7f ef       	ldi	r23, 0xFF	; 255
 4ca:	c5 01       	movw	r24, r10
 4cc:	2d d1       	rcall	.+602    	; 0x728 <strnlen_P>
 4ce:	4c 01       	movw	r8, r24
 4d0:	f3 2d       	mov	r31, r3
 4d2:	f0 68       	ori	r31, 0x80	; 128
 4d4:	3f 2e       	mov	r3, r31
 4d6:	82 01       	movw	r16, r4
 4d8:	33 fc       	sbrc	r3, 3
 4da:	19 c0       	rjmp	.+50     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4dc:	82 2d       	mov	r24, r2
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	88 16       	cp	r8, r24
 4e2:	99 06       	cpc	r9, r25
 4e4:	a0 f4       	brcc	.+40     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4e6:	b6 01       	movw	r22, r12
 4e8:	80 e2       	ldi	r24, 0x20	; 32
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	33 d1       	rcall	.+614    	; 0x754 <fputc>
 4ee:	2a 94       	dec	r2
 4f0:	f5 cf       	rjmp	.-22     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4f2:	f5 01       	movw	r30, r10
 4f4:	37 fc       	sbrc	r3, 7
 4f6:	85 91       	lpm	r24, Z+
 4f8:	37 fe       	sbrs	r3, 7
 4fa:	81 91       	ld	r24, Z+
 4fc:	5f 01       	movw	r10, r30
 4fe:	b6 01       	movw	r22, r12
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	28 d1       	rcall	.+592    	; 0x754 <fputc>
 504:	21 10       	cpse	r2, r1
 506:	2a 94       	dec	r2
 508:	21 e0       	ldi	r18, 0x01	; 1
 50a:	82 1a       	sub	r8, r18
 50c:	91 08       	sbc	r9, r1
 50e:	81 14       	cp	r8, r1
 510:	91 04       	cpc	r9, r1
 512:	79 f7       	brne	.-34     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 514:	e1 c0       	rjmp	.+450    	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
 516:	84 36       	cpi	r24, 0x64	; 100
 518:	11 f0       	breq	.+4      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51a:	89 36       	cpi	r24, 0x69	; 105
 51c:	39 f5       	brne	.+78     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 51e:	f8 01       	movw	r30, r16
 520:	37 fe       	sbrs	r3, 7
 522:	07 c0       	rjmp	.+14     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 524:	60 81       	ld	r22, Z
 526:	71 81       	ldd	r23, Z+1	; 0x01
 528:	82 81       	ldd	r24, Z+2	; 0x02
 52a:	93 81       	ldd	r25, Z+3	; 0x03
 52c:	0c 5f       	subi	r16, 0xFC	; 252
 52e:	1f 4f       	sbci	r17, 0xFF	; 255
 530:	08 c0       	rjmp	.+16     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 532:	60 81       	ld	r22, Z
 534:	71 81       	ldd	r23, Z+1	; 0x01
 536:	07 2e       	mov	r0, r23
 538:	00 0c       	add	r0, r0
 53a:	88 0b       	sbc	r24, r24
 53c:	99 0b       	sbc	r25, r25
 53e:	0e 5f       	subi	r16, 0xFE	; 254
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	f3 2d       	mov	r31, r3
 544:	ff 76       	andi	r31, 0x6F	; 111
 546:	3f 2e       	mov	r3, r31
 548:	97 ff       	sbrs	r25, 7
 54a:	09 c0       	rjmp	.+18     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 54c:	90 95       	com	r25
 54e:	80 95       	com	r24
 550:	70 95       	com	r23
 552:	61 95       	neg	r22
 554:	7f 4f       	sbci	r23, 0xFF	; 255
 556:	8f 4f       	sbci	r24, 0xFF	; 255
 558:	9f 4f       	sbci	r25, 0xFF	; 255
 55a:	f0 68       	ori	r31, 0x80	; 128
 55c:	3f 2e       	mov	r3, r31
 55e:	2a e0       	ldi	r18, 0x0A	; 10
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	a3 01       	movw	r20, r6
 564:	33 d1       	rcall	.+614    	; 0x7cc <__ultoa_invert>
 566:	88 2e       	mov	r8, r24
 568:	86 18       	sub	r8, r6
 56a:	44 c0       	rjmp	.+136    	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 56c:	85 37       	cpi	r24, 0x75	; 117
 56e:	31 f4       	brne	.+12     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 570:	23 2d       	mov	r18, r3
 572:	2f 7e       	andi	r18, 0xEF	; 239
 574:	b2 2e       	mov	r11, r18
 576:	2a e0       	ldi	r18, 0x0A	; 10
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	25 c0       	rjmp	.+74     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 57c:	93 2d       	mov	r25, r3
 57e:	99 7f       	andi	r25, 0xF9	; 249
 580:	b9 2e       	mov	r11, r25
 582:	8f 36       	cpi	r24, 0x6F	; 111
 584:	c1 f0       	breq	.+48     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 586:	18 f4       	brcc	.+6      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 588:	88 35       	cpi	r24, 0x58	; 88
 58a:	79 f0       	breq	.+30     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 58c:	ae c0       	rjmp	.+348    	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 58e:	80 37       	cpi	r24, 0x70	; 112
 590:	19 f0       	breq	.+6      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 592:	88 37       	cpi	r24, 0x78	; 120
 594:	21 f0       	breq	.+8      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 596:	a9 c0       	rjmp	.+338    	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 598:	e9 2f       	mov	r30, r25
 59a:	e0 61       	ori	r30, 0x10	; 16
 59c:	be 2e       	mov	r11, r30
 59e:	b4 fe       	sbrs	r11, 4
 5a0:	0d c0       	rjmp	.+26     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5a2:	fb 2d       	mov	r31, r11
 5a4:	f4 60       	ori	r31, 0x04	; 4
 5a6:	bf 2e       	mov	r11, r31
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5aa:	34 fe       	sbrs	r3, 4
 5ac:	0a c0       	rjmp	.+20     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5ae:	29 2f       	mov	r18, r25
 5b0:	26 60       	ori	r18, 0x06	; 6
 5b2:	b2 2e       	mov	r11, r18
 5b4:	06 c0       	rjmp	.+12     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5b6:	28 e0       	ldi	r18, 0x08	; 8
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	05 c0       	rjmp	.+10     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5bc:	20 e1       	ldi	r18, 0x10	; 16
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c2:	20 e1       	ldi	r18, 0x10	; 16
 5c4:	32 e0       	ldi	r19, 0x02	; 2
 5c6:	f8 01       	movw	r30, r16
 5c8:	b7 fe       	sbrs	r11, 7
 5ca:	07 c0       	rjmp	.+14     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5cc:	60 81       	ld	r22, Z
 5ce:	71 81       	ldd	r23, Z+1	; 0x01
 5d0:	82 81       	ldd	r24, Z+2	; 0x02
 5d2:	93 81       	ldd	r25, Z+3	; 0x03
 5d4:	0c 5f       	subi	r16, 0xFC	; 252
 5d6:	1f 4f       	sbci	r17, 0xFF	; 255
 5d8:	06 c0       	rjmp	.+12     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5da:	60 81       	ld	r22, Z
 5dc:	71 81       	ldd	r23, Z+1	; 0x01
 5de:	80 e0       	ldi	r24, 0x00	; 0
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 5f       	subi	r16, 0xFE	; 254
 5e4:	1f 4f       	sbci	r17, 0xFF	; 255
 5e6:	a3 01       	movw	r20, r6
 5e8:	f1 d0       	rcall	.+482    	; 0x7cc <__ultoa_invert>
 5ea:	88 2e       	mov	r8, r24
 5ec:	86 18       	sub	r8, r6
 5ee:	fb 2d       	mov	r31, r11
 5f0:	ff 77       	andi	r31, 0x7F	; 127
 5f2:	3f 2e       	mov	r3, r31
 5f4:	36 fe       	sbrs	r3, 6
 5f6:	0d c0       	rjmp	.+26     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 5f8:	23 2d       	mov	r18, r3
 5fa:	2e 7f       	andi	r18, 0xFE	; 254
 5fc:	a2 2e       	mov	r10, r18
 5fe:	89 14       	cp	r8, r9
 600:	58 f4       	brcc	.+22     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 602:	34 fe       	sbrs	r3, 4
 604:	0b c0       	rjmp	.+22     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 606:	32 fc       	sbrc	r3, 2
 608:	09 c0       	rjmp	.+18     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 60a:	83 2d       	mov	r24, r3
 60c:	8e 7e       	andi	r24, 0xEE	; 238
 60e:	a8 2e       	mov	r10, r24
 610:	05 c0       	rjmp	.+10     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 612:	b8 2c       	mov	r11, r8
 614:	a3 2c       	mov	r10, r3
 616:	03 c0       	rjmp	.+6      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 618:	b8 2c       	mov	r11, r8
 61a:	01 c0       	rjmp	.+2      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 61c:	b9 2c       	mov	r11, r9
 61e:	a4 fe       	sbrs	r10, 4
 620:	0f c0       	rjmp	.+30     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 622:	fe 01       	movw	r30, r28
 624:	e8 0d       	add	r30, r8
 626:	f1 1d       	adc	r31, r1
 628:	80 81       	ld	r24, Z
 62a:	80 33       	cpi	r24, 0x30	; 48
 62c:	21 f4       	brne	.+8      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 62e:	9a 2d       	mov	r25, r10
 630:	99 7e       	andi	r25, 0xE9	; 233
 632:	a9 2e       	mov	r10, r25
 634:	09 c0       	rjmp	.+18     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 636:	a2 fe       	sbrs	r10, 2
 638:	06 c0       	rjmp	.+12     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 63a:	b3 94       	inc	r11
 63c:	b3 94       	inc	r11
 63e:	04 c0       	rjmp	.+8      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 640:	8a 2d       	mov	r24, r10
 642:	86 78       	andi	r24, 0x86	; 134
 644:	09 f0       	breq	.+2      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 646:	b3 94       	inc	r11
 648:	a3 fc       	sbrc	r10, 3
 64a:	10 c0       	rjmp	.+32     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 64c:	a0 fe       	sbrs	r10, 0
 64e:	06 c0       	rjmp	.+12     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 650:	b2 14       	cp	r11, r2
 652:	80 f4       	brcc	.+32     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 654:	28 0c       	add	r2, r8
 656:	92 2c       	mov	r9, r2
 658:	9b 18       	sub	r9, r11
 65a:	0d c0       	rjmp	.+26     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 65c:	b2 14       	cp	r11, r2
 65e:	58 f4       	brcc	.+22     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 660:	b6 01       	movw	r22, r12
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	76 d0       	rcall	.+236    	; 0x754 <fputc>
 668:	b3 94       	inc	r11
 66a:	f8 cf       	rjmp	.-16     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 66c:	b2 14       	cp	r11, r2
 66e:	18 f4       	brcc	.+6      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 670:	2b 18       	sub	r2, r11
 672:	02 c0       	rjmp	.+4      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 674:	98 2c       	mov	r9, r8
 676:	21 2c       	mov	r2, r1
 678:	a4 fe       	sbrs	r10, 4
 67a:	0f c0       	rjmp	.+30     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 67c:	b6 01       	movw	r22, r12
 67e:	80 e3       	ldi	r24, 0x30	; 48
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	68 d0       	rcall	.+208    	; 0x754 <fputc>
 684:	a2 fe       	sbrs	r10, 2
 686:	16 c0       	rjmp	.+44     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 688:	a1 fc       	sbrc	r10, 1
 68a:	03 c0       	rjmp	.+6      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 68c:	88 e7       	ldi	r24, 0x78	; 120
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	02 c0       	rjmp	.+4      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 692:	88 e5       	ldi	r24, 0x58	; 88
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	b6 01       	movw	r22, r12
 698:	0c c0       	rjmp	.+24     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 69a:	8a 2d       	mov	r24, r10
 69c:	86 78       	andi	r24, 0x86	; 134
 69e:	51 f0       	breq	.+20     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6a0:	a1 fe       	sbrs	r10, 1
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6a4:	8b e2       	ldi	r24, 0x2B	; 43
 6a6:	01 c0       	rjmp	.+2      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6a8:	80 e2       	ldi	r24, 0x20	; 32
 6aa:	a7 fc       	sbrc	r10, 7
 6ac:	8d e2       	ldi	r24, 0x2D	; 45
 6ae:	b6 01       	movw	r22, r12
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	50 d0       	rcall	.+160    	; 0x754 <fputc>
 6b4:	89 14       	cp	r8, r9
 6b6:	30 f4       	brcc	.+12     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6b8:	b6 01       	movw	r22, r12
 6ba:	80 e3       	ldi	r24, 0x30	; 48
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	4a d0       	rcall	.+148    	; 0x754 <fputc>
 6c0:	9a 94       	dec	r9
 6c2:	f8 cf       	rjmp	.-16     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6c4:	8a 94       	dec	r8
 6c6:	f3 01       	movw	r30, r6
 6c8:	e8 0d       	add	r30, r8
 6ca:	f1 1d       	adc	r31, r1
 6cc:	80 81       	ld	r24, Z
 6ce:	b6 01       	movw	r22, r12
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	40 d0       	rcall	.+128    	; 0x754 <fputc>
 6d4:	81 10       	cpse	r8, r1
 6d6:	f6 cf       	rjmp	.-20     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6d8:	22 20       	and	r2, r2
 6da:	09 f4       	brne	.+2      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6dc:	4e ce       	rjmp	.-868    	; 0x37a <vfprintf+0x4c>
 6de:	b6 01       	movw	r22, r12
 6e0:	80 e2       	ldi	r24, 0x20	; 32
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	37 d0       	rcall	.+110    	; 0x754 <fputc>
 6e6:	2a 94       	dec	r2
 6e8:	f7 cf       	rjmp	.-18     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
 6ea:	f6 01       	movw	r30, r12
 6ec:	86 81       	ldd	r24, Z+6	; 0x06
 6ee:	97 81       	ldd	r25, Z+7	; 0x07
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6f2:	8f ef       	ldi	r24, 0xFF	; 255
 6f4:	9f ef       	ldi	r25, 0xFF	; 255
 6f6:	2b 96       	adiw	r28, 0x0b	; 11
 6f8:	0f b6       	in	r0, 0x3f	; 63
 6fa:	f8 94       	cli
 6fc:	de bf       	out	0x3e, r29	; 62
 6fe:	0f be       	out	0x3f, r0	; 63
 700:	cd bf       	out	0x3d, r28	; 61
 702:	df 91       	pop	r29
 704:	cf 91       	pop	r28
 706:	1f 91       	pop	r17
 708:	0f 91       	pop	r16
 70a:	ff 90       	pop	r15
 70c:	ef 90       	pop	r14
 70e:	df 90       	pop	r13
 710:	cf 90       	pop	r12
 712:	bf 90       	pop	r11
 714:	af 90       	pop	r10
 716:	9f 90       	pop	r9
 718:	8f 90       	pop	r8
 71a:	7f 90       	pop	r7
 71c:	6f 90       	pop	r6
 71e:	5f 90       	pop	r5
 720:	4f 90       	pop	r4
 722:	3f 90       	pop	r3
 724:	2f 90       	pop	r2
 726:	08 95       	ret

00000728 <strnlen_P>:
 728:	fc 01       	movw	r30, r24
 72a:	05 90       	lpm	r0, Z+
 72c:	61 50       	subi	r22, 0x01	; 1
 72e:	70 40       	sbci	r23, 0x00	; 0
 730:	01 10       	cpse	r0, r1
 732:	d8 f7       	brcc	.-10     	; 0x72a <strnlen_P+0x2>
 734:	80 95       	com	r24
 736:	90 95       	com	r25
 738:	8e 0f       	add	r24, r30
 73a:	9f 1f       	adc	r25, r31
 73c:	08 95       	ret

0000073e <strnlen>:
 73e:	fc 01       	movw	r30, r24
 740:	61 50       	subi	r22, 0x01	; 1
 742:	70 40       	sbci	r23, 0x00	; 0
 744:	01 90       	ld	r0, Z+
 746:	01 10       	cpse	r0, r1
 748:	d8 f7       	brcc	.-10     	; 0x740 <strnlen+0x2>
 74a:	80 95       	com	r24
 74c:	90 95       	com	r25
 74e:	8e 0f       	add	r24, r30
 750:	9f 1f       	adc	r25, r31
 752:	08 95       	ret

00000754 <fputc>:
 754:	0f 93       	push	r16
 756:	1f 93       	push	r17
 758:	cf 93       	push	r28
 75a:	df 93       	push	r29
 75c:	fb 01       	movw	r30, r22
 75e:	23 81       	ldd	r18, Z+3	; 0x03
 760:	21 fd       	sbrc	r18, 1
 762:	03 c0       	rjmp	.+6      	; 0x76a <fputc+0x16>
 764:	8f ef       	ldi	r24, 0xFF	; 255
 766:	9f ef       	ldi	r25, 0xFF	; 255
 768:	2c c0       	rjmp	.+88     	; 0x7c2 <fputc+0x6e>
 76a:	22 ff       	sbrs	r18, 2
 76c:	16 c0       	rjmp	.+44     	; 0x79a <fputc+0x46>
 76e:	46 81       	ldd	r20, Z+6	; 0x06
 770:	57 81       	ldd	r21, Z+7	; 0x07
 772:	24 81       	ldd	r18, Z+4	; 0x04
 774:	35 81       	ldd	r19, Z+5	; 0x05
 776:	42 17       	cp	r20, r18
 778:	53 07       	cpc	r21, r19
 77a:	44 f4       	brge	.+16     	; 0x78c <fputc+0x38>
 77c:	a0 81       	ld	r26, Z
 77e:	b1 81       	ldd	r27, Z+1	; 0x01
 780:	9d 01       	movw	r18, r26
 782:	2f 5f       	subi	r18, 0xFF	; 255
 784:	3f 4f       	sbci	r19, 0xFF	; 255
 786:	31 83       	std	Z+1, r19	; 0x01
 788:	20 83       	st	Z, r18
 78a:	8c 93       	st	X, r24
 78c:	26 81       	ldd	r18, Z+6	; 0x06
 78e:	37 81       	ldd	r19, Z+7	; 0x07
 790:	2f 5f       	subi	r18, 0xFF	; 255
 792:	3f 4f       	sbci	r19, 0xFF	; 255
 794:	37 83       	std	Z+7, r19	; 0x07
 796:	26 83       	std	Z+6, r18	; 0x06
 798:	14 c0       	rjmp	.+40     	; 0x7c2 <fputc+0x6e>
 79a:	8b 01       	movw	r16, r22
 79c:	ec 01       	movw	r28, r24
 79e:	fb 01       	movw	r30, r22
 7a0:	00 84       	ldd	r0, Z+8	; 0x08
 7a2:	f1 85       	ldd	r31, Z+9	; 0x09
 7a4:	e0 2d       	mov	r30, r0
 7a6:	09 95       	icall
 7a8:	89 2b       	or	r24, r25
 7aa:	e1 f6       	brne	.-72     	; 0x764 <fputc+0x10>
 7ac:	d8 01       	movw	r26, r16
 7ae:	16 96       	adiw	r26, 0x06	; 6
 7b0:	8d 91       	ld	r24, X+
 7b2:	9c 91       	ld	r25, X
 7b4:	17 97       	sbiw	r26, 0x07	; 7
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	17 96       	adiw	r26, 0x07	; 7
 7ba:	9c 93       	st	X, r25
 7bc:	8e 93       	st	-X, r24
 7be:	16 97       	sbiw	r26, 0x06	; 6
 7c0:	ce 01       	movw	r24, r28
 7c2:	df 91       	pop	r29
 7c4:	cf 91       	pop	r28
 7c6:	1f 91       	pop	r17
 7c8:	0f 91       	pop	r16
 7ca:	08 95       	ret

000007cc <__ultoa_invert>:
 7cc:	fa 01       	movw	r30, r20
 7ce:	aa 27       	eor	r26, r26
 7d0:	28 30       	cpi	r18, 0x08	; 8
 7d2:	51 f1       	breq	.+84     	; 0x828 <__ultoa_invert+0x5c>
 7d4:	20 31       	cpi	r18, 0x10	; 16
 7d6:	81 f1       	breq	.+96     	; 0x838 <__ultoa_invert+0x6c>
 7d8:	e8 94       	clt
 7da:	6f 93       	push	r22
 7dc:	6e 7f       	andi	r22, 0xFE	; 254
 7de:	6e 5f       	subi	r22, 0xFE	; 254
 7e0:	7f 4f       	sbci	r23, 0xFF	; 255
 7e2:	8f 4f       	sbci	r24, 0xFF	; 255
 7e4:	9f 4f       	sbci	r25, 0xFF	; 255
 7e6:	af 4f       	sbci	r26, 0xFF	; 255
 7e8:	b1 e0       	ldi	r27, 0x01	; 1
 7ea:	3e d0       	rcall	.+124    	; 0x868 <__ultoa_invert+0x9c>
 7ec:	b4 e0       	ldi	r27, 0x04	; 4
 7ee:	3c d0       	rcall	.+120    	; 0x868 <__ultoa_invert+0x9c>
 7f0:	67 0f       	add	r22, r23
 7f2:	78 1f       	adc	r23, r24
 7f4:	89 1f       	adc	r24, r25
 7f6:	9a 1f       	adc	r25, r26
 7f8:	a1 1d       	adc	r26, r1
 7fa:	68 0f       	add	r22, r24
 7fc:	79 1f       	adc	r23, r25
 7fe:	8a 1f       	adc	r24, r26
 800:	91 1d       	adc	r25, r1
 802:	a1 1d       	adc	r26, r1
 804:	6a 0f       	add	r22, r26
 806:	71 1d       	adc	r23, r1
 808:	81 1d       	adc	r24, r1
 80a:	91 1d       	adc	r25, r1
 80c:	a1 1d       	adc	r26, r1
 80e:	20 d0       	rcall	.+64     	; 0x850 <__ultoa_invert+0x84>
 810:	09 f4       	brne	.+2      	; 0x814 <__ultoa_invert+0x48>
 812:	68 94       	set
 814:	3f 91       	pop	r19
 816:	2a e0       	ldi	r18, 0x0A	; 10
 818:	26 9f       	mul	r18, r22
 81a:	11 24       	eor	r1, r1
 81c:	30 19       	sub	r19, r0
 81e:	30 5d       	subi	r19, 0xD0	; 208
 820:	31 93       	st	Z+, r19
 822:	de f6       	brtc	.-74     	; 0x7da <__ultoa_invert+0xe>
 824:	cf 01       	movw	r24, r30
 826:	08 95       	ret
 828:	46 2f       	mov	r20, r22
 82a:	47 70       	andi	r20, 0x07	; 7
 82c:	40 5d       	subi	r20, 0xD0	; 208
 82e:	41 93       	st	Z+, r20
 830:	b3 e0       	ldi	r27, 0x03	; 3
 832:	0f d0       	rcall	.+30     	; 0x852 <__ultoa_invert+0x86>
 834:	c9 f7       	brne	.-14     	; 0x828 <__ultoa_invert+0x5c>
 836:	f6 cf       	rjmp	.-20     	; 0x824 <__ultoa_invert+0x58>
 838:	46 2f       	mov	r20, r22
 83a:	4f 70       	andi	r20, 0x0F	; 15
 83c:	40 5d       	subi	r20, 0xD0	; 208
 83e:	4a 33       	cpi	r20, 0x3A	; 58
 840:	18 f0       	brcs	.+6      	; 0x848 <__ultoa_invert+0x7c>
 842:	49 5d       	subi	r20, 0xD9	; 217
 844:	31 fd       	sbrc	r19, 1
 846:	40 52       	subi	r20, 0x20	; 32
 848:	41 93       	st	Z+, r20
 84a:	02 d0       	rcall	.+4      	; 0x850 <__ultoa_invert+0x84>
 84c:	a9 f7       	brne	.-22     	; 0x838 <__ultoa_invert+0x6c>
 84e:	ea cf       	rjmp	.-44     	; 0x824 <__ultoa_invert+0x58>
 850:	b4 e0       	ldi	r27, 0x04	; 4
 852:	a6 95       	lsr	r26
 854:	97 95       	ror	r25
 856:	87 95       	ror	r24
 858:	77 95       	ror	r23
 85a:	67 95       	ror	r22
 85c:	ba 95       	dec	r27
 85e:	c9 f7       	brne	.-14     	; 0x852 <__ultoa_invert+0x86>
 860:	00 97       	sbiw	r24, 0x00	; 0
 862:	61 05       	cpc	r22, r1
 864:	71 05       	cpc	r23, r1
 866:	08 95       	ret
 868:	9b 01       	movw	r18, r22
 86a:	ac 01       	movw	r20, r24
 86c:	0a 2e       	mov	r0, r26
 86e:	06 94       	lsr	r0
 870:	57 95       	ror	r21
 872:	47 95       	ror	r20
 874:	37 95       	ror	r19
 876:	27 95       	ror	r18
 878:	ba 95       	dec	r27
 87a:	c9 f7       	brne	.-14     	; 0x86e <__ultoa_invert+0xa2>
 87c:	62 0f       	add	r22, r18
 87e:	73 1f       	adc	r23, r19
 880:	84 1f       	adc	r24, r20
 882:	95 1f       	adc	r25, r21
 884:	a0 1d       	adc	r26, r0
 886:	08 95       	ret

00000888 <_exit>:
 888:	f8 94       	cli

0000088a <__stop_program>:
 88a:	ff cf       	rjmp	.-2      	; 0x88a <__stop_program>
